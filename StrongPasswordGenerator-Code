import tkinter as tk
import random
import string

def add_must_include():
    text = must_entry.get()
    if text:
        must_listbox.insert(tk.END, text)
        must_entry.delete(0, tk.END)

def remove_must_include():
    selected_indices = must_listbox.curselection()
    for index in reversed(selected_indices):
        must_listbox.delete(index)

def generate_password():
    try:
        length = int(length_entry.get())
    except ValueError:
        result_entry.config(state="normal")
        result_entry.delete(0, tk.END)
        result_entry.insert(0, "Invalid length!")
        result_entry.config(state="readonly")
       
        return

    characters = string.ascii_letters
    if include_numbers.get():
        characters += string.digits
    if include_special.get():
        characters += string.punctuation

    must_include = list(must_listbox.get(0, tk.END))
    must_total_length = sum(len(s) for s in must_include)

    if must_total_length > length:
        result_entry.config(state="normal")
        result_entry.delete(0, tk.END)
        result_entry.insert(0, "Must include strings exceed password length!")
        result_entry.config(state="readonly")
       
        return

    random_length = length - must_total_length
    random_part = ''.join(random.choice(characters) for _ in range(random_length))
    
    password = random_part
    for s in must_include:
        pos = random.randint(0, len(password))
        password = password[:pos] + s + password[pos:]

    result_entry.config(state="normal")
    result_entry.delete(0, tk.END)
    result_entry.insert(0, password)
    result_entry.config(state="readonly")
   
def copy_password():
    password = result_entry.get()
    root.clipboard_clear()
    root.clipboard_append(password)

root = tk.Tk()
root.title("Advanced Password Generator")


left_frame = tk.Frame(root)
left_frame.grid(row=0, column=0, padx=10, pady=10)


tk.Label(left_frame, text="Password Length:").grid(row=0, column=0, sticky="w")
length_entry = tk.Entry(left_frame, width=10)
length_entry.grid(row=0, column=1, padx=5, pady=5)
length_entry.insert(0, "12")  # Default length.


include_numbers = tk.BooleanVar()
tk.Checkbutton(left_frame, text="Include Numbers", variable=include_numbers).grid(row=1, column=0, columnspan=2, sticky="w")
include_special = tk.BooleanVar()
tk.Checkbutton(left_frame, text="Include Special Characters", variable=include_special).grid(row=2, column=0, columnspan=2, sticky="w")

tk.Button(left_frame, text="Generate Password", command=generate_password).grid(row=3, column=0, columnspan=2, pady=5)


tk.Label(left_frame, text="Generated Password:").grid(row=4, column=0, sticky="w")
result_entry = tk.Entry(left_frame, width=30, state="readonly")
result_entry.grid(row=5, column=0, columnspan=2, padx=5, pady=5)


tk.Button(left_frame, text="Copy Password", command=copy_password).grid(row=6, column=0, columnspan=2, pady=5)


right_frame = tk.Frame(root)
right_frame.grid(row=0, column=1, padx=10, pady=10, sticky="ns")

tk.Label(right_frame, text="Must Include Substrings:").grid(row=0, column=0, columnspan=3)

must_listbox = tk.Listbox(right_frame, width=25, height=8)
must_listbox.grid(row=1, column=0, columnspan=2, pady=5)

scrollbar = tk.Scrollbar(right_frame, orient="vertical", command=must_listbox.yview)
scrollbar.grid(row=1, column=2, sticky="ns")
must_listbox.config(yscrollcommand=scrollbar.set)

must_entry = tk.Entry(right_frame, width=20)
must_entry.grid(row=2, column=0, padx=5, pady=5)

tk.Button(right_frame, text="+", width=3, command=add_must_include).grid(row=2, column=1, padx=5, pady=5)
# "â€“" button to remove the selected substring.
tk.Button(right_frame, text="-", width=3, command=remove_must_include).grid(row=2, column=2, padx=5, pady=5)

root.mainloop()
